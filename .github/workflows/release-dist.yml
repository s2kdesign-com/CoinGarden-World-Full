name: Release Distribution Packages

on:
  repository_dispatch:
    types: [build_success]
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "release"
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release Mobile Artifacts
    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          workflow: build-mobile-apps.yml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # Use the empty string ("") to ignore status or conclusion in the search
          workflow_conclusion: success

      - name: Create Release
        id: create_release
        # Drafts your next Release notes as Pull Requests are merged into "master"
        uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          # config-name: my-config.yml
          # disable-autolabeler: true
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Release Assets
        # You may pin to the exact commit or the version.
        # uses: alexellis/upload-assets@5586bc227f8525a5e3525e6edf64da5350bfb5b1
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The paths to the assets you want to upload as a JSON array. You can use a glob pattern.
          asset_paths: | 
            coingarden-macos-ci-build/CoinGardenWorld.Maui-1.0.0.pkg
            coingarden-windows-ci-build/CoinGardenWorld.Maui_1.0.0.1_Test/CoinGardenWorld.Maui_1.0.0.1_x64.msix
            coingarden-android-ci-build/com.s2kdesign.coingarden.world-Signed.apk
          